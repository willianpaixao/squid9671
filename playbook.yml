---
- name: Start Prometheus stack
  hosts: ungrouped
  tasks:
    - name: Template prometheus.yml
      ansible.builtin.template:
        src: templates/prometheus.yml.j2
        dest: /tmp/prometheus.yml
        owner: root
        group: docker
        mode: '0444'

    - name: Template loki.yaml
      ansible.builtin.template:
        src: templates/loki.yaml.j2
        dest: /tmp/loki.yaml
        owner: root
        group: docker
        mode: '0444'

    - name: Template grafana.ini
      ansible.builtin.template:
        src: templates/datasources.yaml.j2
        dest: /tmp/datasources.yaml
        owner: root
        group: docker
        mode: '0444'

    - name: Create Prometheus container
      community.docker.docker_container:
        name: prometheus
        image: quay.io/prometheus/prometheus:v2.51.1
        ports:
          - "9090:9090"
        volumes:
          - /tmp/prometheus.yml:/etc/prometheus/prometheus.yml:ro

    - name: Create Alertmanager container
      community.docker.docker_container:
        name: alertmanager
        image: quay.io/prometheus/alertmanager:v0.27.0
        ports:
          - "9093:9093"

    - name: Create node-exporter container
      community.docker.docker_container:
        name: node-exporter
        image: quay.io/prometheus/node-exporter:v1.7.0
        command: '--path.rootfs=/host'
        volumes:
          - '/:/host:ro,rslave'
        network_mode: host

    - name: Create cAdvisor container
      community.docker.docker_container:
        name: cadvisor
        image: gcr.io/cadvisor/cadvisor:v0.49.1
        volumes:
          - '/:/rootfs:ro'
          - '/dev/disk/:/dev/disk:ro'
          - '/sys:/sys:ro'
          - '/var/lib/docker/:/var/lib/docker:ro'
          - '/var/run:/var/run:ro'
        ports:
          - "8080"
        devices:
          - "/dev/kmsg:ro"
        privileged: true

    - name: Create Loki container
      community.docker.docker_container:
        name: loki
        image: grafana/loki:3.0.0
        command: '-config.file=/etc/loki/config.yaml'
        ports:
          - "3100:3100"
        volumes:
          - /tmp/loki.yaml:/etc/loki/config.yaml:ro

    - name: Create Grafana container
      community.docker.docker_container:
        name: grafana
        image: grafana/grafana:10.4.2
        ports:
          - "3000:3000"
        volumes:
          - /tmp/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yml:ro
